-- ../mad test-misc-maps.mad
-- assume ../madx64 to be present...

local object                                                    in MAD
local tblcat                                                    in MAD.utility
local run_test, is_unittest, run_module in require("trackvsptc")

-- The setup for the tests ----------------------------------------------------o

local ref_cfg = object "ref" {
  -- How to run the tests
  dorun  = true, -- Default: true 
  dosave = false, -- Default: false
  doprnt = false, -- Default: false
  dodbg  = false, -- Default: false
  doplot = false, -- Default: false

  gen_utest = false, -- Default: false

  -- list of variables in the tests
  alist = {"model", "energy", "method", "nslice", "x0i"}, --attributes list
  tol = 1000,

  -- list of values that are used to run test but are not changed throughout
  order  = 4,        -- 2/4
  icase  = 56,       -- 56/6
  debug  = 0,        -- 0/6
  snm    = -1,
  seql   =  2,

  x0i    = 1..5,       -- 0, 4D, 5D, 5D strong, 6D (see get_mad_str)
}

local TestMisc = {}

function TestMisc:setUp()
  -- Turn off all unnecessary components for unit testing
  ref_cfg.gen_utest = false
  ref_cfg.dodbg     = false
  ref_cfg.doprnt    = false
  ref_cfg.dosave    = false
  
  -- Turn on the components for unit testing
  ref_cfg.dorun     = true
  ref_cfg.do_utest  = true
  ref_cfg.doplot    = true
end

function TestMisc:testDRIFT()
  local cfg = ref_cfg "drift" { 
    elm = "DRIFT, at=${at}, l=${l}, tilt=${tilt}*pi/8;",
    
    model  = {1},
    method = {2},    
    nslice = {1},
    energy = {1, 6500},  -- {1, 450, 6500}
    seql   = \s -> s.cur_cfg.l,

    tol = 1500,

    l     = {1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1, 1e1, 1e2},
    at    = \s->{s.cur_cfg.l/2},
    tilt  = {0},!..4, 
    alist = tblcat(ref_cfg.alist, {"l", "at", "tilt"}),

    plot_info = {
      x_axis_attr = "${l}",
      title = "Drift NG vs PTC",
      xlabel = "Drift Length [m]",
      filename = "drift.png",
      plotcfg = "set logscale x"
    }
  }
  run_test(cfg)
end

function TestMisc:testELSEP()
  local cfg = ref_cfg "elseparator" {
    elm =  [[
      ELSEPARATOR, at=0.75, l=1.5, 
      ex=${ex}, ey=${ey}, ex_l=${ex_l}, ey_l=${ey_l}, tilt=${tilt}*pi/16;
    ]],

    model  = {1},
    method = {2, 4},    
    nslice = {1, 2},
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 1000,

    alist = tblcat(ref_cfg.alist, {"ex", "ey", "ex_l", "ey_l", "tilt"}),
    ex       = {-4, 4},
    ey       = {-4, 4},
    ex_l     = {-6, 0, 5}, ! Madx is ex_l and the madng is exl
    ey_l     = {-6, 0, 5}, ! Madx is ex_l and the madng is exl
    tilt     = 0..1, 

    plot_info = {
      title = "Electrostatic Separator NG vs PTC",
      filename = "elseparator.png",
    }
  }
  run_test(cfg)
end

function TestMisc:testKICK()
  local cfg = ref_cfg "kicker" {
    elm =  [[
      KICKER, at=0.75, l=1.5, 
      hkick=${hkick}, vkick=${vkick}, tilt=${tilt}*pi/16;
    ]],

    model  = {1},
    method = {2, 4},    
    nslice = {1, 2},
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 1000,

    alist = tblcat(ref_cfg.alist, {"hkick", "vkick", "tilt"}), 
    hkick    = {-2e-3, 0, 1.5e-3},
    vkick    = {-1.5e-3, 0, 2e-3},
    tilt     = 0..1,
    
    plot_info = {
      title = "Kicker NG vs PTC",
      filename = "kicker.png",
    }
  }
  run_test(cfg)
end

-- Allow this file to be loaded with require and not run all tests
-- Generating takes about 2 minutes, unit tests take about 10 seconds
if not is_unittest then run_module(TestMisc)
else                    _G.TestMisc = TestMisc
end
