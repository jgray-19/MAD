local run_test in require("plotting")

TestPatch = {}

local function testROTATION(dir, x_coord, y_coord) -- Length breaks survey and global plot
    local cfg = ref_cfg "rotation" {
      elm =  [[
  elm:  ${dir}rotation, at=0.75, angle=   ${tdir}*pi/100;
  elm2: ${dir}rotation, at=2.75, angle=-1*${tdir}*pi/100;
      ]],
  
      seql = 3.5,
      dir  = dir,
      ng_conv = false, -- No point in checking convergence for rotation
      
      tol = 1e2,
      energy = 1,
      nslice = 50,
  
      plot_info = {
        title       = "Two ".. dir .. " Rotations",
        x_coord     = x_coord,
        y_coord     = y_coord,
        filename    = dir.."-rotation-plot",
        y2range     = {-2e-15, 2e-15},
      }
    }
    run_test(cfg)
  end
  
  local function testTRANSLATION(dir, x_coord, y_coord) -- Length breaks survey and global plot
    local cfg = ref_cfg "translate" {
      elm =  [[
  elm:  TRANSLATION, at=0.75, ${dir}=   ${bdir}*0.5;
  elm2: TRANSLATION, at=2.75, ${dir}=-1*${bdir}*0.5;
      ]],
  
      seql = 3.5,
      dir  = dir,
      ng_conv = false, -- No point in checking convergence for translation
      
      tol = 1e2,
      energy = 1,
      nslice = 50,
  
      plot_info = {
        title       = "Two ".. dir .. " Translations",
        x_coord     = x_coord,
        y_coord     = y_coord,
        filename    = dir.."-translation-plot",
        y2range     = {-2e-15, 2e-15},
      }
    }
    run_test(cfg)
  end

TestPatch.testXRotationLocal  = \-> testROTATION("x", "s", "x")
TestPatch.testXRotationGlobal = \-> testROTATION("x", "Z", "X")

TestPatch.testYRotationLocal  = \-> testROTATION("y", "s", "x")
TestPatch.testYRotationGlobal = \-> testROTATION("y", "Z", "X")

TestPatch.testSRotationLocal  = \-> testROTATION("s", "s", "x")
TestPatch.testSRotationGlobal = \-> testROTATION("s", "Z", "X")

TestPatch.testXTranslationLocal  = \-> testTRANSLATION("dx", "s", "x")
TestPatch.testXTranslationGlobal = \-> testTRANSLATION("dx", "Z", "X")

TestPatch.testYTranslationLocal  = \-> testTRANSLATION("dy", "s", "x")
TestPatch.testYTranslationGlobal = \-> testTRANSLATION("dy", "Z", "X")

TestPatch.testSTranslationLocal  = \-> testTRANSLATION("ds", "s", "x")
TestPatch.testSTranslationGlobal = \-> testTRANSLATION("ds", "Z", "X")
