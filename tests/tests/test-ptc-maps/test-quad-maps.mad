-- ../mad test-quad-maps.mad
-- assume ../madx64 to be present...

local object, tostring in MAD
local tblcat           in MAD.utility
local run_test         in require("trackvsptc")

-- The setup for the tests ----------------------------------------------------o

local ref_cfg = object "ref" {
  -- How to run the tests
  dorun  = true, -- Default: true 
  dosave = false, -- Default: false
  doprnt = false, -- Default: false
  dodbg  = false, -- Default: false
  doplot = false, -- Default: false

  gen_utest = false, -- Default: false
  
  -- list of variables in the tests
  alist = {"model", "energy", "method", "nslice", "x0i"}, --attributes list
  tol = 10,

  -- list of values that are used to run test but are not changed throughout
  order  = 4,        -- 2/4
  icase  = 56,       -- 56/6
  debug  = 0,        -- 0/6
  snm    = -1,
  seql   =  2,
  cmap   = false,

  x0i    = 1..5,       -- 0, 4D, 5D, 6D (see get_mad_str)
}

TestQuad = {}

function TestQuad:setUp()
  -- Turn off all unnecessary components for unit testing
  ref_cfg.gen_utest = false
  ref_cfg.dodbg     = false
  ref_cfg.doprnt    = false
  ref_cfg.dosave    = false
  
  -- Turn on the components for unit testing
  ref_cfg.dorun     = true
  ref_cfg.do_utest  = true
  ref_cfg.doplot    = true
end

-- The tests ------------------------------------------------------------------o
function  TestQuad:testQUAD() -- Test the body (~2 min)
  local cfg = ref_cfg "quad" {
    elm = "QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, k1s=${k1s}, fringe=0",
    model  = 1..2,
    method = 2..8..2,    
    nslice = 1..3,
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 120,

    k1     = {-0.15, 0, 0.2},
    k1s    = {-0.15, 0, 0.2},
    alist = tblcat(ref_cfg.alist, {"k1", "k1s"}),

    plot_info = {
      title       = "Quadrupole Body Comparison",
      series      = {
        "${method} == 2",
        "${method} == 4",
        "${method} == 6",
        "${method} == 8",
      },
      legend      = {
        y1 = "Method 2",
        y2 = "Method 4",
        y3 = "Method 6",
        y4 = "Method 8",
      },
      filename = "quad-body-comparision.png",
    }
  }
  run_test(cfg)
end

function  TestQuad:testQUADm() -- Test the multipole (~2 min)
  local cfg = ref_cfg "quadm" {
    elm = [[
      QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, k1s=${k1s}, tilt=${tilt}*pi/8,
      knl=${knl}, ksl=${ksl}, frngmax=${frngmax}, fringe=7,
      k0=${k0}
    ]],
    
    tol = 400,

    model  = {1},  -- DKD slow as it does ~300 rotations producing ~4 MB of data (WEDGE)
    method = {2},
    nslice = {1},
    energy = {1},       

    k1   = {0, 0.2},  -- Test just multipole first
    k1s  = \s->s.k1, !{0, -0.15, 0.2},  -- Test just multipole first
    knl  = {
      { }, 
      {0.05, 0  , 0, 0 },
      {0.05, 0.5, 5, 50},
    },
    ksl  = \s-> s.knl,
    tilt = 0..2,
    frngmax = {2, 5},
    k0    = {0, 0.05},
    alist = tblcat(
      ref_cfg.alist, 
      {"tilt", "k1s", "k1", "ksl", "knl", "frngmax", "k0"}
    ),

    plot_info = \s-> {
      series = {
        "'${knl}' == '" .. tostring(s.knl[1]) .. "'",
        "'${knl}' == '" .. tostring(s.knl[2]) .. "'",
        "'${knl}' == '" .. tostring(s.knl[3]) .. "'",
      },
      legend = {
        y1 = "knl = \\{" .. tostring(s.knl[1]) .. "\\}",
        y2 = "knl = \\{" .. tostring(s.knl[2]) .. "\\}",
        y3 = "knl = \\{" .. tostring(s.knl[3]) .. "\\}",
      },
      title = "Quadrupole Multipole Comparison",
      filename = "quad-mult-comparision.png",
    }
  }
  run_test(cfg)
end

function  TestQuad:testQUADf() -- Test the fringe (~1 min)
  local cfg = ref_cfg "quadf" {
    elm = [[
      QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, k1s=${k1s}, tilt=${tilt}*pi/8,
      fringe=${fringe}, f1=${f1}, f2=${f2}
    ]],
    
    tol = 25,

    model  = {2}, -- Use TKT as faster
    method = {2},    
    nslice = {1},
    energy = {1},

    tilt   = 0..2,
    fringe = {1, 6, 7},
    k1   = {0, 0.2},
    k1s  = \s->s.k1,
    f1   = {0, 0.5, -0.7},
    f2   = {0, -0.5, 0.7},
    alist = tblcat(ref_cfg.alist, {"tilt", "fringe", "k1", "k1s", "f1", "f2"}),

    plot_info = {
      title       = "Quadrupole Fringe Comparison",
      series      = {
        "${k1} == 0",
        "${k1} == 0.2",
      },
      legend      = {
        y1 = "k1 = 0",
        y2 = "k1 = 0.2",
      },
      filename    = "quad-fringe-comparision.png",
    }
  }
  run_test(cfg)
end
--[==[
function  TestQuad:testQUADh()
  local cfg = ref_cfg "quadh" {
    elm = [[
      QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, k1s=${k1s}, tilt=${tilt}*pi/8,
      k0=${k0}
    ]],
    
    tol = 25,
    
    model  = {1}, -- Use DKD as otherwise PTC broken
    method = {2},    
    nslice = {1},
    energy = {1},

    tilt   = 0..4,
    k1     = {0, 0.2},
    k1s    = \s->s.k1,
    k0     = {-0.05, 0, 0.05},
    
    alist = tblcat(ref_cfg.alist, {"tilt", "k1", "k1s", "k0"}),

    plot_info = {
      title       = "Quadrupole with k0 Comparison",
      series      = {
        "${k0} == -0.05",
        "${k0} == 0",
        "${k0} == 0.05",
      },
      legend      = {
        y1 = "k0 = -0.05",
        y2 = "k0 = 0",
        y3 = "k0 = 0.05",
      },
      filename    = "quad-k0-comparision.png",
    }
  }
  run_test(cfg)
end
]==]

function  TestQuad:testQUADfh() -- MAD-NG does bend fringe for fringe=3
  local cfg = ref_cfg "quadfh" {
    elm = [[
      QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, k1s=${k1s}, fringe=${fringe},
      k0=${k0}, fint=${fint}, fintx=${fintx}, hgap=${hgap},
    ]],
    
    tol = 25,
    
    model  = {1}, -- Use DKD as otherwise PTC broken
    method = {2},
    nslice = {1},
    energy = {1},

    fringe      = {7},
    k1          = {0, 0.2},
    k1s         = \s->s.k1,
    k0          = {0, 0.05},
    fint        = {0, 0.4, 0.7}, 
    fintx       = {0, 0.3, 0.8},
    hgap        = {0, 0.04, 0.05},
    alist = tblcat(
      ref_cfg.alist, 
      {"k1", "k1s", "k0", "fringe", "fint", "fintx", "hgap"}
    ),

    plot_info = {
      title       = "Quadrupole with k0 and fringe Comparison",
      series      = {
        "${k0} == 0",
        "${k0} == 0.05",
      },
      legend      = {
        y1 = "k0 = 0",
        y2 = "k0 = 0.05",
      },
      filename    = "quad-k0-fringe-comparision.png",
    }
  }
  run_test(cfg)
end

function  TestQuad:testQUADhe ()
  local cfg = ref_cfg "quadhe" {
    elm = [[
      QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, k1s=${k1s}, fringe=7,
      k0=${k0}, e1=${e1}, e2=${e2}, h1=${h1}, h2=${h2},
      frngmax=${frngmax}
    ]],
    
    tol = 600,
    
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1},

    k1          = {0, 0.2},
    k1s         = \s->s.k1,
    k0          = {0, 0.05},
    e1          = {0, 0.4, 0.7}, 
    e2          = {0, 0.3, 0.8},
    h1          = {0, 0.04, 0.05},
    h2          = {0, 0.04, 0.05},
    frngmax  = {2, 5},
    alist = tblcat(
      ref_cfg.alist, 
      {"k1", "k1s", "k0", "e1", "e2", "h1", "h2", "frngmax"}
    ),

    plot_info = {
      title       = "Quadrupole with face and fringe Comparison",
      series      = {
        "${e1} == 0 and ${e2} == 0",
        "${e1} ~= 0 or ${e2} ~= 0",
      },
      legend      = {
        y1 = "e1 = e2 = 0",
        y2 = "e1 != 0 or e2 != 0",
      },
      filename    = "quad-face-fringe-comparision.png",
    }
  }
  run_test(cfg)
end