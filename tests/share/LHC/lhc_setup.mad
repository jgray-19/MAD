-- import LHCB1 and LHCB2
local lhcb1, lhcb2 in MADX
local bind1st      in MAD.gfunc

-- MAD-X compatibility --------------------------------------------------------o

-- Warning: only sequence scope should be modified!
--          Do not touch to MAD environment!

-- share lhcb1 with lhcb2 for MAD-X compatibility
-- NEW: not needed after recent change of semantic in MADX env
-- lhcb1:share(lhcb2)

-- proper settings of sequence direction
lhcb2.dir = -1

-- change angle of RBEND for MAD-X compatibility
-- if MADX.option.rbarc == true then
--   local cord2arc in MADX
--   local toarc = \s,e => if e.kind == 'rbend' then
--                           cord2arc(e) ; s:update(e.__id) ; e.kind = nil
--                         end
--                       end
--   lhcb1:foreach(bind1st(toarc,lhcb1)) ; lhcb1:check_sequ()
--   lhcb2:foreach(bind1st(toarc,lhcb2)) ; lhcb2:check_sequ()
-- end

-- LHC layout plots -----------------------------------------------------------o

-- mark elements for layout angle
local lhc_layangle = {
  "MBRC.4L1.B1","MBRC.4L1.B2",
  "MBXW.F4L1","MBXW.E4L1","MBXW.D4L1","MBXW.C4L1","MBXW.B4L1","MBXW.A4L1",
  -- IP1
  "MBXW.F4R1","MBXW.E4R1","MBXW.D4R1","MBXW.C4R1","MBXW.B4R1","MBXW.A4R1",
  "MBRC.4R1.B1","MBRC.4R1.B2",
  --
  "MBRC.4L2.B1","MBRC.4L2.B2",
  "MBX.4L2",
  -- IP2
  "MBX.4R2",
  "MBRC.4R2.B1","MBRC.4R2.B2",
  --
  "MBRC.4L5.B1","MBRC.4L5.B2",
  "MBXW.F4L5","MBXW.E4L5","MBXW.D4L5","MBXW.C4L5","MBXW.B4L5","MBXW.A4L5",
  -- IP5
  "MBXW.F4R5","MBXW.E4R5","MBXW.D4R5","MBXW.C4R5","MBXW.B4R5","MBXW.A4R5",
  "MBRC.4R5.B1","MBRC.4R5.B2",
  --
  "MBRC.4L8.B1","MBRC.4L8.B2",
  "MBX.4L8",
  -- IP8
  "MBX.4R8",
  "MBRC.4R8.B1","MBRC.4R8.B2",
}

local foreach  in MAD.lfun
local bind2st  in MAD.gfunc
local layangle in MAD.element.flags

local function setangl (seq,sel,name)
  local e = seq[name]
  if e then e[sel](e,layangle) end
end

local function set_layangle (seq, sel_)
  local sel = sel_ == false and 'deselect' or 'select'
  foreach(bind2st(setangl,seq,sel), lhc_layangle)
  return seq
end

-- equip LHC sequences with with set/unset layout angle method
lhcb1:set_methods{ set_layangle=set_layangle }:set_layangle()
lhcb2:set_methods{ set_layangle=set_layangle }:set_layangle()

-- set missing mechanical separation for layout, capture the sequence.
local set_mech_sep = \seq -> \e,i =>
    if not e.mech_sep then e.mech_sep = (seq[i+1] or seq[i-1]).mech_sep end
  end

lhcb1:foreach( set_mech_sep(lhcb1) )
lhcb2:foreach( set_mech_sep(lhcb2) )

-- end of setup ---------------------------------------------------------------o
