local run_test in require("plotting")

TestMisc = {}

local function testSOLENOID(x_coord, y_coord)
  local cfg = ref_cfg "solenoid" {
    elm =  [[
elm:  SOLENOID, at=0.75, l=1.5, ks=   ${bdir}*0.5, fringe=0;
elm2: SOLENOID, at=2.75, l=1.5, ks=-1*${bdir}*0.5, fringe=0;
    ]],

    seql = 3.5,
    ng_conv = false, -- solenoids only have thick models 

    tol = 1e2,
    energy = 1,
    nslice = 50,

    plot_info = {
      title       = "Two Solenoids",
      x_coord     = x_coord,
      y_coord     = y_coord,
      filename    = "solenoid-plot",
      y2range     = {-5e-15, 5e-15},
    }
  }
  run_test(cfg)
end

local function testKICKER(x_coord, y_coord)
  local cfg = ref_cfg "kicker" {
    elm =  [[
elm:  KICKER, at=0.75, l=1.5, hkick=0.1*${bdir}, vkick=0.08*${bdir}, tilt=0;
elm2: KICKER, at=2.75, l=1.5, hkick=-0.1*${bdir}, vkick=-0.08*${bdir}, tilt=0;
    ]],

    seql = 3.5,
    
    tol = 1e2,
    energy = 1,
    nslice = 50,

    plot_info = {
      title       = "Two Kickers",
      x_coord     = x_coord,
      y_coord     = y_coord,
      filename    = "kicker-plot",
      y2range     = {-1e-15, 1e-15},
    }
  }
  run_test(cfg)
end


local function testELSEP(x_coord, y_coord) -- Need to activate slicing in PTC and deactivate fringe completely in MAD-NG
  local cfg = ref_cfg "elsep" {
    elm =  [[
elm:  ELSEPARATOR, at=0.75, l=1.5, ex=   ${bdir}*4, ey =   ${bdir}*4, ex_l=0, ey_l=0, fringe=0;
elm2: ELSEPARATOR, at=2.75, l=1.5, ex=-1*${bdir}*4, ey =-1*${bdir}*4, ex_l=0, ey_l=0, fringe=0;
    ]],

    seql = 3.5,
    ng_conv = false, -- Only one model for else
    ng_vs_ptc = false, -- PTC can't slice elseparators
    
    tol = 1e2,
    energy = 1,
    nslice = 50,

    plot_info = {
      title       = "Two Electrostatic Separators",
      x_coord     = x_coord,
      y_coord     = y_coord,
      filename    = "elsep-plot",
      y2range     = {-5e-14, 5e-14},
    }
  }

  run_test(cfg)
end

local function testMULTIPOLE (x_coord, y_coord)
  local cfg = ref_cfg "multipole" {
    elm =  [[
elm:  MULTIPOLE, at=0.75, lrad=1.5, knl={   ${bdir},    ${bdir},    ${bdir}*20};
elm2: MULTIPOLE, at=2.75, lrad=1.5, knl={-1*${bdir}, -1*${bdir}, -1*${bdir}*20};
    ]],

    seql = 3.5,
    ng_conv = false, -- No point in checking convergence for multipole
    
    tol = 1e2,
    energy = 1,
    nslice = 50,

    plot_info = {
      title       = "Two Multipoles",
      x_coord     = x_coord,
      y_coord     = y_coord,
      filename    = "multipole-plot",
      y2range     = {-2e-13, 2e-13},
    }
  }
  run_test(cfg)
end 

TestMisc.testSolenoidLocal  = \-> testSOLENOID("s", "x")
TestMisc.testSolenoidGlobal = \-> testSOLENOID("Z", "X")

TestMisc.testKickerLocal  = \-> testKICKER("s", "x")
TestMisc.testKickerGlobal = \-> testKICKER("Z", "X")

TestMisc.testElsepLocal  = \-> testELSEP("s", "x")
TestMisc.testElsepGlobal = \-> testELSEP("Z", "X")

TestMisc.testMultipoleLocal  = \-> testMULTIPOLE("s", "x")
TestMisc.testMultipoleGlobal = \-> testMULTIPOLE("Z", "X")