local object                     in MAD
local tblcat                     in MAD.utility
local run_test                   in require("trackvsng")

-- The tests ------------------------------------------------------------------o
TestCurved = {}

function TestCurved:setUp()
  -- Turn off all unnecessary components for unit testing
  ref_cfg.dodbg     = false
  ref_cfg.doprnt    = false
  ref_cfg.dosave    = false
  
  -- Turn on the components for unit testing
  ref_cfg.dorun     = true
  ref_cfg.do_utest  = true
  ref_cfg.doplot    = true
end

function TestCurved:testSBEND() -- Test the body (~2 min)
  local cfg = ref_cfg "sbend" {
    elm = [[sbend 'sbend' {
      at=0.75, l=1.5, k0=${k0}*${bdir}*math.pi/${angle_div}, angle=${tdir}*math.pi/${angle_div}*1.5, fringe=0,
      knl = {0, ${bdir}*${k1}}, ksl = {0, 0, 0, ${bdir}*${k3s}},
    }]],
    model  = {1, 2},
    method = 2..8..2,    
    nslice = 1..3,
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = {13000, 4000, 15000, 31000, 85000}, -- Purely from backtrack otherwise error < 100

    angle_div = {50, 200, 1000},
    k0        = {0, 1, 1.2},
    mult      = {true, false},
    k1        = \s->s.cur_cfg.mult and -0.15 or 0,
    k3s       = \s->s.cur_cfg.mult and     2 or 0,
    alist = tblcat(ref_cfg.alist, {"angle_div", "k0", "mult"}),

    plot_info = {
      title    = "SBend NG v NG Maps",
      filename = "sbend-ngvng.png",
    }
  }
  run_test(cfg)
end

function TestCurved:testRBEND() -- Test the body (~2 min)
  local cfg = ref_cfg "rbend" {
    elm = [[rbend 'rbend' {
      at=0.75, l=1.5, k0=${k0}*${bdir}*math.pi/${angle_div}, angle=${tdir}*math.pi/${angle_div}*1.5, fringe=0, 
      e1 = ${tdir}*${e1}*math.pi/${angle_div}*1.5, e2 = ${tdir}*${e2}*math.pi/${angle_div}*1.5,
      true_rbend = ${true_rbend},
    }]],
    model  = {1, 2},
    method = 2..8..2,    
    nslice = 1..3,
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 1500,

    angle_div  = {50, 200, 1000},
    k0         = {0, 0.8, 1},
    true_rbend = {true, false},
    e1         = \s-> s.cur_cfg.nslice == 1 and {-0.15, 0, 0.2} or {0}, -- slicing has no effect on e1
    e2         = \s-> s.cur_cfg.nslice == 1 and {-0.2, 0, 0.15} or {0}, -- slicing has no effect on e2
    alist = tblcat(ref_cfg.alist, {"true_rbend", "k0", "angle_div", "e1", "e2"}),

    plot_info = {
      title    = "RBend NG v NG Maps",
      filename = "rbend-ngvng.png",
    }  }
  run_test(cfg)
end

function TestCurved:testQUADh() -- Test curvature in straight fringe
  local cfg = ref_cfg "quadh" {
    elm = [[
      quadrupole 'quadh' {
        at = 0.75, l = 1.5,  k0=${k0}*${bdir}, k1=${bdir}*0.5,
        e1=${tdir}*${e1}*math.pi/100*1.5, e2=${tdir}*${e2}*math.pi/100*1.5,
        fringe = 0,! h1=${tdir}*${h1}, h2=${tdir}*${h2},
      }
    ]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1, 6500},  -- {1, 450, 6500}
    dobck = false, -- (h1, h2)

    tol = 10, !750 with backtracking and h1, h2 = 0

    k0 = {0, 1e-2},
    e1 = {-0.15, 0, 0.2},
    e2 = {-0.2, 0, 0.15},
    h1 = {0,-0.04, 0.05},
    h2 = {0, 0.04,-0.05},
    alist = tblcat(ref_cfg.alist, {"k0", "e1", "e2", "h1", "h2"}),
    plot_info = {
      title    = "Straight Fringe With Curvature NG v NG Maps",
      filename = "quadh-ngvng.png",
    }  
  }
  run_test(cfg)
end

function TestCurved:testRBENDPARALLEL()
  local cfg = ref_cfg "rbend_parallel" {
    elm = [[rbend 'rbend' { true_rbend = true,
      at=0.75, l=1.5, k0=${bdir}*math.pi/${angle_div}, angle=${tdir}*math.pi/${angle_div}*1.5, fringe=0, 
      e1 = ${e1} and ${tdir}*${e1}*math.pi/${angle_div}*1.5, e2 = ${e2} and ${tdir}*${e2}*math.pi/${angle_div}*1.5
    }]],
    
    model  = {1, 2},
    method = 2..8..2,    
    nslice = 1..3,
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 500,

    angle_div = {50, 100, 200, 500, 1000},
    patch_first = {false, true},
    e1 = \s -> s.cur_cfg.patch_first and {false} or {-0.15, 0, 0.2},
    e2 = \s -> s.cur_cfg.patch_first and {-0.2, 0, 0.15} or {false},
    alist = tblcat(ref_cfg.alist, {"patch_first", "angle_div", "e1", "e2"}),

    plot_info = {
      title    = "True Parallel RBend NG v NG Maps",
      filename = "true-parallel-rbend-ngvng.png",
    }
  }
  run_test(cfg)
end