package.path = package.path .. ";../tools/?.mad"
local args_dict, arg_fun, global_cfg, parse_cmd_args, args_to_cfg, run_tests  in require "test-tool"

local help_usage = [[Usage: ../mad <your_test_suite.mad> [options] [testname1 [testname2] ... ]
Options:
  -h, --help:             Print this help
  -v, --verbose:          Print during and after the test.
  -d, --debug:            Stop on first failure and run dbgmap on PTC and MAD output (saved in output/)
  -s, --save:             Save the plot to a file
      --save_trk:         Save the tracking results to a file
      --save_srv:         Save the survey results to a file
  -c, --cmap:             Use the C++ maps instead of the Lua maps as the default
      --ptc:              Perform the comparison with PTC on the plot (ng_vs_ptc)
      --ng:               Perform the comparison with reversing edir, sdir and chg on the plot (ng_vs_ng)
      --cpp:              Perform the comparison with the C++ maps (or lua maps if --cmap is set) on the plot (ng_vs_cpp)
      --conv:             Perform the comparison with the thick and converged thin maps on the plot (ng_conv)
  -p, --pattern PATTERN:  Execute all test names matching the Lua PATTERN
                          May be repeated to include several patterns
                          Make sure you escape magic chars like +? with %
  -x, --exclude PATTERN:  Exclude all test names matching the Lua PATTERN
                          May be repeated to exclude several patterns
                          Make sure you escape magic chars like +? with %
  testname1, testname2, ... : tests to run in the form of TestClass or TestClass.testMethod
]]

arg_fun["help"] = \=> print(help_usage) ; os.exit(0) end

args_dict["--norun"  ] = nil -- The default is to do nothing if no test is specified
args_dict["-n"       ] = nil

args_dict["--figure" ] = nil -- Plots will always be created, just a matter of whether they are saved or not
args_dict["-f"       ] = nil

args_dict["--save"   ] = "sv_plt"
args_dict["-s"       ] = "sv_plt"

args_dict["--save_trk"] = "sv_trk"
args_dict["--save_srv"] = "sv_srv"

args_dict["--cmap"   ] = "cmap"
args_dict["-c"       ] = "cmap"

args_dict["--ptc"    ] = "ng_vs_ptc"
args_dict["--ng"     ] = "ng_vs_ng"
args_dict["--cpp"    ] = "ng_vs_cpp"
args_dict["--conv"   ] = "ng_conv"

return {
  parse_cmd_args = parse_cmd_args,
  args_to_cfg    = args_to_cfg   ,
  run_tests      = run_tests     ,
}
